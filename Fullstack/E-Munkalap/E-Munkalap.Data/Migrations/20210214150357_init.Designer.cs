// <auto-generated />
using System;
using E_Munkalap.DTO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Munkalap.Migrations
{
    [DbContext(typeof(MunkalapContext))]
    [Migration("20210214150357_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("E_Munkalap.DTO.Authentication.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("munkalap_roles");
                });

            modelBuilder.Entity("E_Munkalap.DTO.Authentication.SessionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdLoginName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime>("LastAccess")
                        .HasColumnType("datetime");

                    b.Property<string>("SessionID")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("SessionID")
                        .IsUnique();

                    b.ToTable("munkalap_sessions");
                });

            modelBuilder.Entity("E_Munkalap.DTO.Authentication.UserRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdLoginName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("munkalap_userRoles");
                });

            modelBuilder.Entity("E_Munkalap.DTO.Base.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdLoginName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("munkalap_employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdLoginName = "kiss.karoly@dolgozo.jedlik.eu",
                            Name = "Kiss Károly"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ügyes Béla"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mindenes Árpád"
                        });
                });

            modelBuilder.Entity("E_Munkalap.DTO.Base.EmployeeProfession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("munkalap_employeeProfessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            ProfessionId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 1,
                            ProfessionId = 3
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 1,
                            ProfessionId = 4
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 2,
                            ProfessionId = 1
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 2,
                            ProfessionId = 2
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 2,
                            ProfessionId = 3
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 2,
                            ProfessionId = 4
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 2,
                            ProfessionId = 5
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 2,
                            ProfessionId = 6
                        },
                        new
                        {
                            Id = 10,
                            EmployeeId = 3,
                            ProfessionId = 3
                        },
                        new
                        {
                            Id = 11,
                            EmployeeId = 3,
                            ProfessionId = 4
                        });
                });

            modelBuilder.Entity("E_Munkalap.DTO.Base.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("munkalap_professions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lakatos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Asztalos"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Takarító"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Segédmunkás"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kőműves"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Burkoló"
                        });
                });

            modelBuilder.Entity("E_Munkalap.DTO.Work.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AssignDetails")
                        .HasColumnType("text");

                    b.Property<string>("AssignerName")
                        .HasColumnType("text");

                    b.Property<string>("CheckComment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckerUser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FinishComment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Munkalap_Works");
                });

            modelBuilder.Entity("E_Munkalap.DTO.Authentication.UserRoleModel", b =>
                {
                    b.HasOne("E_Munkalap.DTO.Authentication.RoleModel", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Munkalap.DTO.Base.EmployeeProfession", b =>
                {
                    b.HasOne("E_Munkalap.DTO.Base.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Munkalap.DTO.Base.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Munkalap.DTO.Work.Work", b =>
                {
                    b.HasOne("E_Munkalap.DTO.Base.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("E_Munkalap.DTO.Base.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}

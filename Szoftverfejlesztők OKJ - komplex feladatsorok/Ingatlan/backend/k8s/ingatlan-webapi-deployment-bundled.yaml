# kubectl create secret docker-registry bognarpal-ghcr-io-registry-secret --docker-server=ghcr.io --docker-username=bognarpal --docker-password=************************* --docker-email=bognar.pal@jedlik.eu

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingatlan-webapi-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: ingatlan-webapi
  template:
    metadata:
      labels:
        component: ingatlan-webapi
    spec:
      containers:
        - name: backend
          image: ghcr.io/bognarpal/ingatlan-webapi:1.0.3
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: bognarpal-ghcr-io-registry-secret

---

apiVersion: v1
kind: Service
metadata:
  name: ingatlan-webapi-cluster-ip-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    component: ingatlan-webapi
    
--- 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingatlan-webapi-ingress-service
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8, 193.225.219.0/24
    # nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.102.100/24, 193.225.219.0/24
    
spec:
  tls:
    - hosts:
        - cluster.jedlik.eu
      secretName: cluster-jedlik-eu
  rules:
    - host: cluster.jedlik.eu
      http:
        paths:
          - path: /ingatlanwebapi/?(.*)
            pathType: Prefix
            backend:
              service:
                name: ingatlan-webapi-cluster-ip-service
                port:
                  number: 80
